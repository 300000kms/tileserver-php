{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"TileServer.php","body":"================================\r\nOGC Web Map Tiling Server (WMTS)\r\n================================\r\n\r\nThis server distributes maps to desktop, web, and mobile applications from\r\na standard Apache+PHP web hosting.\r\n\r\nIt is a free and open-source project implementing OGC WMTS standard for\r\npre-rendered map tiles made with MapTiler Cluster, MapTiler, GDAL2Tiles,\r\nor available as MBTiles files.\r\n\r\nIt is the easiest and cheapest way how to serve zoomable maps in a\r\nstandardized way - practically from any ordinary web hosting.\r\n\r\nIt is easy to install - just copy the project files to a PHP-enabled\r\ndirectory along with your map data containing metadata.json file.\r\n\r\nThis project is developed in PHP, not because it is the best language for\r\ndevelopment of web applications, but because it maximally simplify the\r\ndeployment on large number of web hosting providers including various free\r\nweb hostings.\r\n\r\nTiles are served directly by Apache with mod_rewrite rules as static files\r\nand therefore are very fast and with correct HTTP caching headers.\r\nOnly XML metadata are delivered via PHP.\r\nMBTiles are served via PHP, unless they are unpacked with mbutil.\r\n\r\nRequirements:\r\n-------------\r\n\r\n- Apache webserver (with mod_rewrite / .htaccess supported)\r\n- PHP 5.2+\r\n\r\n(or anther webserver implementing mod_rewrite rules and PHP)\r\n\r\nInstallation:\r\n-------------\r\n\r\nDownload the project files as a zip archive or source code from GitHub and\r\nunpack it into a web-hosting of your choice.\r\n\r\nIf you access the web address relevant to the installation directory, \r\nthe TileServer.php Server should display you a welcome message and further\r\ninstructions.\r\n\r\nThen you can upload to the web hosting your mapping data - a directory with\r\ntiles rendered with MapTiler Cluster.\r\n\r\nTiles produced by open-source GDAL2Tiles or MapTiler and tiles in .mbtiles\r\nfiles can be easily converted to required structure (XYZ with top-left origin\r\nand metadata.json file).\r\n\r\nThe OpenSource utility mbutil (https://github.com/mapbox/mbutil) produces\r\nexactly the required format.\r\n\r\nDirect reading of .mbtiles files is supported, but with decreased performance\r\ncompared to the static files in a directory. Therefore the data management,\r\nespecially upload over FTP or similar protocols, is easier.\r\n\r\nSupported protocols:\r\n--------------------\r\n\r\n- OpenGIS WMTS 1.0.0\r\n  \r\n  The Open Geospatial Consortium (OGC) Web Map Tile Service (WMTS)\r\n  Both KVP and RESTful version 1.0.0:\r\n  http://www.opengeospatial.org/standards/wmts/\r\n  \r\n  Target is maximal compliance to the standard.\r\n  \r\n  Exposed at http://[...]/wmts\r\n  \r\n- OSGeo TMS 1.0.0\r\n\r\n  The OSGeo Tile Maps Service, but with inverted y-coordinates:\r\n  http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification\r\n  This means request compatible with OpenStreetMap tile servers.\r\n\r\n  Target is \"InvertedTMS\" implementation used by the ArcBruTile client\r\n  which is available from http://arcbrutile.codeplex.com/ and uses\r\n  flipped y-axis.\r\n\r\n  Exposed at http://[...]/tms\r\n  \r\n- TileJSON.js\r\n\r\n  Metadata about the individual maps in a ready to use form for web\r\n  clients following the standard http://mapbox.com/developers/tilejson/\r\n  and with support for JSONP access.\r\n\r\n  Exposed at http://[...]/layer.jsonp\r\n  \r\n- Direct access with XYZ tile requests (to existing tiles in a directory\r\n  or to .mbtiles)\r\n\r\n  Compatible with Google Maps API / Bing SDK / OpenStreetMap clients.\r\n  \r\n  Exposed at http://[...]/layer/z/x/y.ext\r\n  \r\n\r\nTo use the OGC WMTS services point your client (desktop or web) to the URL\r\nof 'directory' where you installed tileserver.php project with suffix \"wmts\".\r\n\r\nFor example: http://www.example.com/directory/wmts\r\n \r\nYou can also install the project into a root directory of a virtual server:\r\nThen the address is: http://www.example.com/wmts\r\n\r\nSimilarly for another end points.\r\n\r\nThe supported WMTS requests includes:\r\n\r\nGetCapabilities RESTful/KVP:\r\n \r\n   http://[...]/1.0.0/WMTSCapabilities.xml\r\n   http://[...]?service=wmts&request=getcapabilities&version=1.0.0\r\n \r\nGetTile RESTful/KVP:\r\n \r\n   http://[...]/layer/[ANYTHING-OPTIONAL][z]/[x]/[y].[ext]\r\n   http://[...]?service=wmts&request=getTile&layer=[layer]&tilematrix=[z]&tilerow=[y]&tilecol=[y]&format=[ext]\r\n   \r\nAnother example requests are mentioned in the .htaccess.\r\n\r\nPerformance from the web clients\r\n--------------------------------\r\n\r\nIt is highly recommended to map several domain names to the service, such as:\r\nhttp://a.example.com/, http://b.example.com/, http://c.example.com/.\r\nThis can be done with DNS CNAME records pointing to your hosting.\r\nThe reason for this is that traditionally browsers will not send more then two\r\nsimultaneous http request to the same domain - with multiple domains for the\r\nsame server you can better saturate the network and receive the maps faster.\r\n\r\nPerformance\r\n-----------\r\n\r\nIn case the data are available in a form of directory with XYZ tiles, then\r\nApache webserver is serving these files directly as WMTS RESTful or KVP.\r\n\r\nThis means performance is excellent, maps are delivered very fast and large\r\nnumber of concurrent visitors can be handled even with quite a low-end\r\nhardware or cheap/free web hosting providers.\r\n\r\nMod_rewrite rules are utilized to ensure the HTTP requests defined in the OCG\r\nWMTS standard are served, and Apache preserve standard caching headers & eTag.\r\n\r\nThe performance should be significantly better then performance of any other\r\ntile caching project (such as TileCache.org or GeoWebCache).\r\n\r\nPerformance graph for \"apache static\" comparing other tile caching projects\r\nis available online at:\r\nhttp://code.google.com/p/mod-geocache/wiki/PreliminaryBenchmark\r\n\r\nLimits of actual implementation\r\n-------------------------------\r\n\r\nWith intention, in this moment the project supports only:\r\n- Mercator tiles (a la OpenStreetMap) and Geodetic tiles (WGS84 unprojected)\r\n  with known and described tiling scheme.\r\n- All tiles must be 256x256 pixels.\r\n- We enforce and require XYZ (top-left origin) tiling schema (even for TMS).\r\n\r\nPassword protection\r\n-------------------\r\n\r\nHTTP Simple Authentication can be easily added to the server.\r\nEdit the .htaccess and add these lines:\r\n\r\nAuthUserFile /full/path/to/.htpasswd\r\nAuthType Basic\r\nAuthName \"Secure WMTS\"\r\nRequire valid-user\r\n\r\nCreate a file called .htpasswd with user:password format.\r\nYou can use a command-line utility:\r\n\r\n$ htpasswd -c .htpasswd [your-user-login]\r\n\r\nOr an online service:\r\n\r\nhttp://www.htaccesstools.com/htpasswd-generator/\r\n\r\nHTTPS / SSL support\r\n-------------------\r\n\r\nTileServer.php can run without any problems over HTTPS, if required.\r\n\r\nMicrosoft Windows web-hosting\r\n-----------------------------\r\n\r\nThe TileServer.php should run on Windows-powered webservers with Apache\r\ninstallation if PHP 5.2+ and mod_rewrite are available.\r\n\r\nWith the IIS webserver hosting, you may need PHP and IIRF module\r\n(http://iirf.codeplex.com/) and alter appropriately the rewrite rules.\r\n\r\nCredits / Contributors\r\n----------------------\r\n\r\nProject developed initially by Klokan Technologies GmbH, Switzerland in\r\ncooperation with National Oceanic and Atmospheric Administration - NOAA, USA.\r\n\r\nPetr Pridal - Klokan Technologies GmbH <petr.pridal@klokantech.com>\r\nJason Woolard - NOAA <jason.woolard@noaa.gov>\r\nJon Sellars - NOAA <jon.sellars@noaa.gov>\r\n\r\nTested WMTS/TMS clients\r\n-----------------------\r\n\r\n- QuantumGIS Desktop 1.9+ - open with Layer->Add WMS layer\r\n  http://www.qgis.org/\r\n- ESRI ArcGIS Desktop 10.1+ - native WMTS implementation supported\r\n  http://www.esri.com/software/arcgis/arcgis-for-desktop\r\n- ArcBruTiles plugin for ArcGIS 9.3+ - via TMS endpoint\r\n  http://arcbrutile.codeplex.com/\r\n- OpenLayers WMTS Layer - including parsing GetCapabilities\r\n  http://www.openlayers.org/\r\n- GAIA - native WMTS (issues with 3857 to be fixed)\r\n  http://www.thecarbonproject.com/gaia.php\r\n- MapBox.js - the loading of maps via TileJSON\r\n\r\nBSD License\r\n-----------\r\n\r\nCopyright (C) 2012 Klokan Technologies GmbH\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met: \r\n\r\n1. Redistributions of source code must retain the above copyright notice, this\r\n   list of conditions and the following disclaimer. \r\n2. Redistributions in binary form must reproduce the above copyright notice,\r\n   this list of conditions and the following disclaimer in the documentation\r\n   and/or other materials provided with the distribution. \r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\r\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","google":"UA-8073932-8","tagline":"An OGC WMTS compliant map tile server for maps pre-rendered with MapTiler Cluster / GDAL2Tiles / MapTiler / TileMill / MBTiles / etc. It serves maps to desktop, web and mobile applications from an ordinary Apache+PHP webhosting."}